@mixin _pickle-error($error) {
    @error '[Pickle.scss] #{$error}. Please check https://github.com/maoosi/pickle.scss';
}

@function _pickle-str-split($string, $separator) {
    $split-arr: ();
    $index: str-index($string, $separator);

    @while $index !=null {
        $item: str-slice($string, 1, $index - 1);
        $split-arr: append($split-arr, $item);
        $string: str-slice($string, $index + 1);
        $index: str-index($string, $separator);
    }

    $split-arr: append($split-arr, $string);

    @return $split-arr;
}

$_pickle-injected: ();
@function _pickle-already-injected($name) {
    @if index($_pickle-injected, $name) {
        @return true;
    }
    $_pickle-injected: append($_pickle-injected, $name) !global;
    @return false;
}

@mixin _pickle-text-crop(
    $text-crop: null,
    $line-height: 1.2,
    $top-adjustment: 0px,
    $bottom-adjustment: 0px
) {
    @if $text-crop {
        $top-crop: map-get($text-crop, topCrop);
        $bottom-crop: map-get($text-crop, bottomCrop);
        $crop-font-size: map-get($text-crop, cropFontSize);
        $crop-line-height: map-get($text-crop, cropLineHeight);
    
        // Apply values to calculate em-based margins that work with any font size
        $dynamic-top-crop: max(($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;
        $dynamic-bottom-crop: max(($bottom-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;
    
        // Mixin output
        line-height: $line-height;
    
        &::before,
        &::after {
            content: '';
            display: block;
            height: 0;
            width: 0;
        }
    
        &::before {
            margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
        }
    
        &::after {
            margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
        }
    }
}
